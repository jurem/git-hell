#!/bin/bash

version='0.1 alpha'
githelldir=~/git-hell
execdir="$githelldir/exec"
confdir="$githelldir/conf"
accountsfile="$confdir/accounts.csv"
repodir="$githelldir/repo"


bye() {
	echo "$1"
	exit ${2:-42}
}


die() {
	echo "Error: $1"
	exit ${2:-42}
}


trace() {
	echo "$@" >&2
}


request_userpass() {
	local enteruser
	local enterpass
	echo -n "Enter git-hell username: "
	read -s enteruser
	echo -n "Enter git-hell password: "
	read -s enterpass
	account_read $enteruser
	[ -z "$account_user" -o "$account_pass" != "$enterpass" ] && bye 'Access denied.'
}


account_read() {
	local user=$1
	local file=${2:-$accountsfile}
	read account_user account_pass account_active account_rest <<< $(egrep "^$user\>" "/dev/$file")
	[ "$account_active" != "true" ] && account_active=false
}


account_change() {
	local user=$1
	sed -i.old -re "/^$user\>/s/.*/$1\t$2\t$3\t$4/" "$accountsfile"
}


append_key() {
        local user=$1
        local key=$2
        mkdir -p ~/.ssh 2>/dev/null &&
        { echo -n "command=\"auth $user\","
          echo -n 'no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty '
          echo "$key"
        } >> ~/.ssh/authorized_keys
}


repo_name() {
	# user-friendly repository name: strip any dirs and extension
	local repo=$(basename $1 .git)
	echo $repo
}


repo_path() {
	local user=$1
	local repo=$(repo_name $2)
	echo "$repodir/$user-$repo.git"
}


repo_init() {
	local user=$1
	local repo=$2
	local path="$(repo_path $user $repo)"
	mkdir -p "$repodir" &&
	git init --bare "$path" &>/dev/null || die 'cannot initialize repository.'
	echo "Repository '$(repo_name $repo)' initialized."
}


is_git() {
	local cmd=$1
	case $cmd in
		git-receive-pack|git-upload-pack|git-upload-archive)
			 return 0
		;;
		*)
			return 1
		;;
	esac
}


run_git() {
	local user=$1
	local gitcmd=${2:4}
	local gitrep=${3#\'}
	gitrep=${gitrep%\'}
	git $gitcmd $(repo_path $user $gitrep)
	exit
}


command_path() {
	local cmd=$1
	echo "$execdir/cmd_$cmd"
}


read_tag() {
        local cmd=$1
        local tag=$2
        egrep "^#\s*$tag:" "$(command_path $cmd)" | cut -d: -f2
}


print_header() {
	echo "Git-hell $version"
}

